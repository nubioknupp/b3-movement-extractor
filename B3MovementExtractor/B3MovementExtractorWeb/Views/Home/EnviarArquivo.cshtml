@{
    ViewData["Title"] = "Resultado";
}

<div class="text-center">
    <h1>Resultado do Processamento</h1>
    <hr />
    <div class="jumbotron jumbotron-fluid">
        <div class="container">
            <div class="row">
                <section>
                    @foreach (var institution in (List<FinancialInstitution>)ViewData["FinancialInstitutions"])
                    {
                        <div class="form-group">
                            <div class="col-md-12">
                                <p style="font-size: x-large;"><b>Movimentações de Proventos (@institution.Alias):</b></p>
                                <button name="Copy-@institution.Alias" style=" float: left; margin-bottom: 10px;">
                                    Copiar
                                </button>
                                <textarea name="Earnings-@institution.Alias"
                                          style="height: 300px; width: 100%;">@ViewData[$"Earnings{institution.Alias}"]</textarea>
                            </div>
                        </div>
                        <br />
                    }

                    <div class="form-group">
                        <div class="col-md-12">
                            <p style="font-size: x-large;"><b>Outras Movimentações:</b></p>
                            <button name="Copy-ExtractOtherWithoutTransferAndEarnings" style=" float: left; margin-bottom: 10px;">
                                Copiar
                            </button>
                            <textarea name="ExtractOtherWithoutTransferAndEarnings"
                                      style="height: 300px; width: 100%;">@ViewData["ExtractOtherWithoutTransferAndEarnings"]</textarea>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var institutions = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(@ViewData["FinancialInstitutions"]));

    for (let i = 0; i < institutions.length; i++)
    {
        const $copyTextareaInstitutionBtn = document.querySelector(`[name="Copy-${institutions[i].Alias}"]`);
        const $copyTextareaInstitution = document.querySelector(`[name="Earnings-${institutions[i].Alias}"]`);

        CopyText($copyTextareaInstitutionBtn, $copyTextareaInstitution);
    }

    const $copyTextareaOtherMovBtn = document.querySelector('[name="Copy-ExtractOtherWithoutTransferAndEarnings"]');
    const $copyTextareaOtherMov = document.querySelector('[name="ExtractOtherWithoutTransferAndEarnings"]');

    CopyText($copyTextareaOtherMovBtn, $copyTextareaOtherMov);

    function CopyText($copyTextareaBtn, $copyTextarea)
    {
        $copyTextareaBtn.onclick = function () {
            $copyTextarea.focus();
            $copyTextarea.select();
            navigator.clipboard.writeText($copyTextarea.value).then(function () {
                console.log('Async: Copying to clipboard was successful!');
            }, function (err) {
                console.error('Async: Could not copy text: ', err);
            });
        }
    }
</script>

